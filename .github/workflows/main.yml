name: main

on:
  push:
    branches:
    - main
  
jobs:        
    
  main:
    runs-on: ubuntu-latest
    
    steps:
    - name: Copy repository
      uses: actions/checkout@v4

    - name: 'Create env file'
      run: |
        touch .env
        echo MARIADB_DATABASE="${{ secrets.MARIADB_USER }}" > .env
        echo MARIADB_PASSWORD="${{ secrets.MARIADB_PASSWORD }}" >> .env
        echo MARIADB_DATABASE="${{ secrets.MARIADB_DATABASE }}" > .env
        echo PORT="3000" >> .env
        echo JWT="${{ secrets.JWT }}" >> .env
        echo REFRESH="${{ secrets.REFRESH }}" >> .env
        echo DATABASE_URL="mysql://${{ secrets.MARIADB_USER }}:${{ secrets.MARIADB_PASSWORD }}@db:3306/${{ secrets.MARIADB_DATABASE }}" >> .env
        echo EMAIL="${{ secrets.EMAIL }}" >> .env
        echo CLIENT_ID_MAIL="${{ secrets.CLIENT_ID_MAIL }}" >> .env
        echo CLIENT_SECRET_MAIL="${{ secrets.CLIENT_SECRET_MAIL }}" >> .env
        echo REFRESH_TOKEN_MAIL="${{ secrets.REFRESH_TOKEN_MAIL }}" >> .env
        echo GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" >> .env

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PWD }}     

    - name: Build and push Docker image
      run: |
        docker build --no-cache --target prod -t ${{ secrets.REGISTRY }}/hives-backend:prod -f Dockerfile .
        docker push ${{ secrets.REGISTRY }}/hives-backend:prod

    - name: Copy file via ssh
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.KEY }}
        rm: true
        source: ".env,docker-compose.yml"
        target: api

    - name: deploy api
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: sudo docker compose -f api/docker-compose.yml up --build -d prod